
import fetch from 'node-fetch';

const handler = async (m, { conn, text}) => {
  if (!text) {
    return m.reply(`üí® *Spotify Downloader*

Por favor, ingresa el nombre de una canci√≥n.

üìå Ejemplo:
.spotify Shape of You`);
}

  await m.react('üîç');

  try {
    const res = await fetch(`https://api.nekorinn.my.id/downloader/spotifyplay?q=${encodeURIComponent(text)}`);
    const json = await res.json();

    if (!json.status ||!json.result?.downloadUrl) {
      return m.reply("‚ùå No se pudo obtener la canci√≥n. Intenta con otro t√≠tulo.");
}

    const song = json.result;
    const title = song?.title?.trim() || "T√≠tulo desconocido";
    const artists = Array.isArray(song.artists) && song.artists.length> 0
? song.artists.join(", ")
: "Artista no encontrado";

    const views = song?.views || 0;
    const ago = song?.ago || "Fecha desconocida";
    const videoUrl = song?.sourceUrl || "Sin URL";

    let duracionFormateada = "Duraci√≥n desconocida";
    if (song.duration) {
      const dur = parseInt(song.duration);
      if (!isNaN(dur) && dur> 0) {
        const min = Math.floor(dur / 60000);
        const seg = Math.floor((dur % 60000) / 1000);
        duracionFormateada = `${min}:${String(seg).padStart(2, "0")}`;
}
}

    const description = `‚ï≠‚îÄ‚¨£„Äå *Barboza-Ai* „Äç‚¨£
‚îÇ  ‚â°‚ó¶ üéµ *T√≠tulo:* ${title}
‚îÇ  ‚â°‚ó¶ üé§ *Artista(s):* ${artists}
‚îÇ  ‚â°‚ó¶ ‚è± *Duraci√≥n:* ${duracionFormateada}
‚îÇ  ‚â°‚ó¶ üëÄ *Vistas:* ${views.toLocaleString()}
‚îÇ  ‚â°‚ó¶ üìÖ *Publicado:* ${ago}
‚îÇ  ‚â°‚ó¶ üîó *URL:* ${videoUrl}
‚ï∞‚îÄ‚¨£
> ¬© Powered By Barboza‚Ñ¢`;

    await conn.sendMessage(m.chat, { text: description}, { quoted: m});

    await conn.sendMessage(m.chat, {
      audio: { url: song.downloadUrl},
      mimetype: 'audio/mpeg',
      fileName: `${title}.mp3`,
}, { quoted: m});

    await m.react('‚úÖ');
} catch (error) {
    console.error(error);
    m.reply("‚ö†Ô∏è Hubo un error al procesar tu b√∫squeda. Intenta nuevamente m√°s tarde.");
}
};

handler.help = ['spotify <nombre de canci√≥n>'];
handler.tags = ['descargas'];
handler.command = ['spotify'];

export default handler;