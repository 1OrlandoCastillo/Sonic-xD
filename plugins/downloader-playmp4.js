import axios from 'axios'

let handler = async (m, { conn, text, command, usedPrefix }) => {
  const emoji = 'üé¨'
  const error = '‚ùå'
  const done = '‚úÖ'

  if (!text) {
    return m.reply(`‚ï≠‚îÄ„Äî *üìΩÔ∏è INGRESA UN T√çTULO* „Äï
‚îÇ
‚îú ‚ú¶ *Ejemplo:* ${usedPrefix + command} Arcangel La jumpa
‚îú ‚ú¶ Debes escribir el nombre del video
‚îÇ
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚¨£`)
  }

  try {
    // Llamar a la API de b√∫squeda de video
    const response = await axios.get(`https://api.vreden.my.id/api/ytplayvideo?query=${encodeURIComponent(text)}`)
    const data = response.data

    if (!data?.result?.url) throw '‚ö†Ô∏è No se pudo obtener el video.'

    const info = data.result.metadata
    const videoUrl = data.result.url
    const title = info.title

    // Mostrar info del video
    await conn.sendMessage(m.chat, {
      image: { url: info.thumbnail },
      caption: `‚ï≠‚îÄ„Äî *üéûÔ∏è VIDEO ENCONTRADO* „Äï
‚îÇ
‚îú üìπ *T√≠tulo:* ${title}
‚îú üßë‚Äçüíª *Autor:* ${info.author.name}
‚îú ‚è±Ô∏è *Duraci√≥n:* ${info.duration.timestamp}
‚îú üìä *Vistas:* ${info.views.toLocaleString()}
‚îú üîó *Link:* ${info.url}
‚îÇ
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚¨£`
    }, { quoted: m })

    // Enviar el video
    await conn.sendMessage(m.chat, {
      video: { url: videoUrl },
      caption: `‚ü° *${title}*\n> Enviado por MediaHub`,
      mimetype: 'video/mp4'
    }, { quoted: m })

  } catch (e) {
    console.error(e)
    m.reply(`${error} Ocurri√≥ un error al intentar obtener el video.`)
  }
}

handler.command = ['play2']
handler.help = ['play2 <nombre>']
handler.tags = ['descargas']

export default handler