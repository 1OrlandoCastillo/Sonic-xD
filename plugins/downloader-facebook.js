
import fetch from 'node-fetch';
import axios from 'axios';

let HS = async (m, { conn, text }) => {
    if (!text) return conn.reply(m.chat, '游늷 Atenci칩n futuro cliente proporcione un link de facebook para descargar su video', m);

    try {
        let api = await fetch(`https://vapis.my.id/api/fbdl?url=${text}`);
        let json = await api.json();

        if (!json.data) {
            return conn.reply(m.chat, '游늷 No se descarg칩 el v칤deo. Verifica el enlace.', m);
        }

        let { title, durasi, hd_url, size, upload_date } = json.data;
        let VidBuffer = await getBuffer(hd_url);

        let caption = `- *T칤tulo:* ${title}\n- *Duraci칩n:* ${durasi}\n- *Tama침o:* ${size}\n- *Fecha de Publicaci칩n:* ${upload_date}`;

        await conn.sendMessage(m.chat, { video: VidBuffer, mimetype: "video/mp4", caption }, { quoted: m });
    } catch (error) {
        console.error(error);
        conn.reply(m.chat, '游늷 Ocurri칩 un error inesperado contacta con el creador.', m);
    }
};

HS.command = ['fbdl', 'fb', 'facebook', 'facebookdl'];

export default HS;

const getBuffer = async (url, options = {}) => {
    const res = await axios({ method: 'get', url, headers: { 'DNT': 1, 'Upgrade-Insecure-Request': 1 }, ...options, responseType: 'arraybuffer' });
    return res.data;
};
```

Con estos cambios, al recibir un video desde Facebook podr치s mostrar no solo el t칤tulo y la duraci칩n, sino tambi칠n el tama침o del archivo y la fecha de publicaci칩n. Aseg칰rate de que esos datos est칠n disponibles en la respuesta de la API que est치s utilizando.

Si necesitas m치s ayuda o si hay algo espec칤fico que te gustar칤a agregar o modificar, 춰d칤melo!