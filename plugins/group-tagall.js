import fetch from "node-fetch";

const handler = async (m, { isOwner, isAdmin, conn, text, participants, args }) => {
  const chat = global.db.data.chats[m.chat] || {};
  const emoji = chat.emojiTag || 'ü§ñ';

  if (!(isAdmin || isOwner)) {
    global.dfail('admin', m, conn);
    throw new Error('You do not have permission to use this command.');
  }

  const customMessage = args.join(' ');

  const groupMetadata = await conn.groupMetadata(m.chat);
  const groupName = groupMetadata.subject;

  const countryFlags = {
    '52': 'üá≤üáΩ', '57': 'üá®üá¥', '54': 'üá¶üá∑', '34': 'üá™üá∏', '55': 'üáßüá∑', '1': 'üá∫üá∏', '44': 'üá¨üáß', '91': 'üáÆüá≥',
    '502': 'üá¨üáπ', '56': 'üá®üá±', '51': 'üáµüá™', '58': 'üáªüá™', '505': 'üá≥üáÆ', '593': 'üá™üá®', '504': 'üá≠üá≥',
    '591': 'üáßüá¥', '53': 'üá®üá∫', '503': 'üá∏üáª', '507': 'üáµüá¶', '595': 'üáµüáæ'
  };

  const getCountryFlag = (id) => {
    const phoneNumber = id.split('@')[0];
    if (phoneNumber.startsWith('1')) return 'üá∫üá∏';
    
    let prefix = phoneNumber.substring(0, 3);
    if (!countryFlags[prefix]) {
      prefix = phoneNumber.substring(0, 2);
    }
    
    return countryFlags[prefix] || 'üè≥Ô∏è‚Äçüåà';
  };

  let messageText = `*${groupName}*\n\n*Integrantes: ${participants.length}*\n${customMessage}\n‚îå‚îÄ‚îÄ‚≠ì *Despierten*\n`;
  for (const mem of participants) {
    messageText += `${emoji} ${getCountryFlag(mem.id)} @${mem.id.split('@')[0]}\n`;
  }
  messageText += `‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚≠ì\n\nùòöùò∂ùò±ùò¶ùò≥ ùòâùò∞ùòµ ùòûùò©ùò¢ùòµùò¥ùòàùò±ùò± üö©`;

 const imageUrl = 'https://files.catbox.moe/1j784p.jpg';

  const fkontak = {
    key: {
      remoteJid: m.chat,
      fromMe: false,
      id: m.key.id
    },
    message: {
      contactMessage: {
        displayName: conn.getName(m.sender),
        vcard: `BEGIN:VCARD\nVERSION:3.0\nFN:${conn.getName(m.sender)}\nTEL;type=WA:${m.sender}\nEND:VCARD`
      }
    }
  };

  await conn.sendMessage(m.chat, {
    image: { url: imageUrl },
    caption: messageText,
    mentions: participants.map(a => a.id)
  }, { quoted: fkontak });
};

handler.help = ['todos'];
handler.tags = ['group'];
handler.command = /^(tagall|invocar|marcar|todos|invocaci√≥n)$/i;
handler.admin = true;
handler.group = true;

export default handler;
